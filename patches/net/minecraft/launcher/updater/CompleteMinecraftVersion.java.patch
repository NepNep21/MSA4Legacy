--- a/net/minecraft/launcher/updater/CompleteMinecraftVersion.java
+++ b/net/minecraft/launcher/updater/CompleteMinecraftVersion.java
@@ -7,6 +7,9 @@
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
+import com.google.gson.Gson;
+import com.google.gson.JsonElement;
+import com.google.gson.JsonObject;
 import com.mojang.authlib.UserAuthentication;
 import com.mojang.launcher.OperatingSystem;
 import com.mojang.launcher.game.process.GameProcessBuilder;
@@ -26,9 +29,12 @@
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
+
+import me.nepnep.msa4legacy.patches.MicrosoftAccount;
 import net.minecraft.launcher.CompatibilityRule;
 import net.minecraft.launcher.CurrentLaunchFeatureMatcher;
 import net.minecraft.launcher.Launcher;
+import net.minecraft.launcher.profile.AuthenticationDatabase;
 import net.minecraft.launcher.profile.ProfileManager;
 import net.minecraft.launcher.updater.AbstractDownloadInfo;
 import net.minecraft.launcher.updater.Argument;
@@ -38,6 +44,7 @@
 import net.minecraft.launcher.updater.DownloadType;
 import net.minecraft.launcher.updater.Library;
 import net.minecraft.launcher.updater.MinecraftVersionManager;
+import org.apache.commons.io.FileUtils;
 import org.apache.commons.lang3.text.StrSubstitutor;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
@@ -45,6 +52,7 @@
 public class CompleteMinecraftVersion
 implements CompleteVersion {
     private static final Logger LOGGER = LogManager.getLogger();
+    private final Gson gson = new Gson();
     private String inheritsFrom;
     private String id;
     private Date time;
@@ -98,6 +106,15 @@
                 this.compatibilityRules.add(new CompatibilityRule(compatibilityRule));
             }
         }
+        try {
+            JsonElement indexElement = gson.fromJson(
+                    FileUtils.readFileToString(new File(Launcher.getCurrentInstance().getLauncher().getWorkingDirectory(), String.format("versions/%1$s/%1$s.json", id))),
+                    JsonObject.class
+            ).get("assetIndex");
+            assetIndex = gson.fromJson(indexElement, AssetIndexInfo.class);
+        } catch (IOException e) {
+            LOGGER.error("Failed to copy assetIndex for " + id, e);
+        }
     }
 
     @Override
@@ -328,11 +345,14 @@
 
     public CompatibilityRule.FeatureMatcher createFeatureMatcher() {
         ProfileManager profileManager = Launcher.getCurrentInstance().getProfileManager();
-        UserAuthentication auth = profileManager.getAuthDatabase().getByUUID(profileManager.getSelectedUser());
-        return new CurrentLaunchFeatureMatcher(profileManager.getSelectedProfile(), this, auth);
+        AuthenticationDatabase authDb = profileManager.getAuthDatabase();
+        String selectedUser = profileManager.getSelectedUser();
+        UserAuthentication auth = authDb.getByUUID(selectedUser);
+        
+        return new CurrentLaunchFeatureMatcher(profileManager.getSelectedProfile(), this, auth, authDb.getMSAByUUID(selectedUser));
     }
 
-    public void addArguments(ArgumentType type, CompatibilityRule.FeatureMatcher featureMatcher, GameProcessBuilder builder, StrSubstitutor substitutor) {
+    public void addArguments(ArgumentType type, CompatibilityRule.FeatureMatcher featureMatcher, GameProcessBuilder builder, StrSubstitutor substitutor, MicrosoftAccount msa) {
         if (this.arguments != null) {
             List<Argument> args = this.arguments.get((Object)type);
             if (args != null) {
@@ -343,6 +363,10 @@
         } else if (this.minecraftArguments != null) {
             if (type == ArgumentType.GAME) {
                 for (String arg : this.minecraftArguments.split(" ")) {
+                    if (msa != null && arg.equals("${user_properties}")) {
+                        builder.withArguments("{}");
+                        continue;
+                    }
                     builder.withArguments(substitutor.replace(arg));
                 }
                 if (featureMatcher.hasFeature("is_demo_user", true)) {
@@ -369,4 +393,3 @@
         }
     }
 }
-
